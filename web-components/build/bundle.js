/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./components/FormInput.js":
/*!*********************************!*\
  !*** ./components/FormInput.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar template = document.createElement('template');\ntemplate.innerHTML = \"\\n    <style>\\n        input {\\n            border: 0;\\n            outline: none;\\n            width: calc(100% - 2px);\\n        }\\n\\n        :host {\\n            display: inherit;\\n            height: 100%;\\n            border: 1px solid rgba(25, 25, 25, 0.32);\\n            margin-bottom: 1px;\\n        }\\n    </style>\\n    <input type=\\\"text\\\">\\n\";\n\nvar FormInput =\n/*#__PURE__*/\nfunction (_HTMLElement) {\n  _inherits(FormInput, _HTMLElement);\n\n  function FormInput() {\n    var _this;\n\n    _classCallCheck(this, FormInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormInput).call(this));\n    _this.shadowRoot = _this.attachShadow({\n      mode: 'open'\n    });\n\n    _this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n    _this.$input = _this.shadowRoot.querySelector('input');\n    return _this;\n  }\n\n  _createClass(FormInput, [{\n    key: \"attributeChangedCallback\",\n    value: function attributeChangedCallback(name, oldValue, newValue) {\n      this.$input.setAttribute(name, newValue);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.$input.value = ''; // resets the form without reloading the page\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.$input.value;\n    }\n  }], [{\n    key: \"observedAttributes\",\n    get: function get() {\n      return ['name', 'value', 'placeholder', 'disabled'];\n    }\n  }]);\n\n  return FormInput;\n}(_wrapNativeSuper(HTMLElement));\n\ncustomElements.define('form-input', FormInput);\n\n//# sourceURL=webpack:///./components/FormInput.js?");

/***/ }),

/***/ "./components/MessageForm.js":
/*!***********************************!*\
  !*** ./components/MessageForm.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar template = document.createElement('template');\ntemplate.innerHTML = \"\\n    <style>\\n        div.central-area {\\n            width: 100%;\\n            height: 100%;\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: flex-end;\\n        }\\n\\n        div.sending-form {\\n            width: 100%;\\n            height: 15%;\\n            display: flex;\\n            align-items: stretch;\\n            justify-content: space-between;\\n        }\\n\\n        div.wrap-history { /* necessary for scrolling */\\n            height: 70%; /* note: see about auto-scroll in MessageHistory.append() */\\n            min-height: 0;\\n            overflow: auto;\\n        }\\n\\n        .form-head {\\n        /* note: find a way to actually attach it to the top */\\n            vertical-align: top;\\n            width: 100%;\\n            height: 15%;\\n        }\\n\\n        form-input {\\n            width: 100%;\\n        }\\n\\n        message-history {\\n            height: 100%;\\n            width: 100%;\\n            vertical-align: bottom;\\n        }\\n\\n        div form {\\n            width: 80%;\\n        }\\n\\n        div button {\\n            width: calc(20% - 2px);\\n        }\\n\\n    </style>\\n    <div class=\\\"central-area\\\">\\n        <div class=\\\"form-head\\\">\\n            <message-form-top>\\n            </message-form-top>\\n        </div>\\n        <div class=\\\"wrap-history\\\">\\n            <message-history></message-history>\\n        </div>\\n        <div class=\\\"sending-form\\\">\\n            <form>\\n                <form-input name=\\\"message-text\\\" placeholder=\\\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\\\"></form-input>\\n            </form>\\n            <button type=\\\"submit\\\" onclick=\\\"\\\">Send message</button>\\n        </div>\\n    </div>\\n\";\n\nvar MessageForm =\n/*#__PURE__*/\nfunction (_HTMLElement) {\n  _inherits(MessageForm, _HTMLElement);\n\n  function MessageForm() {\n    var _this;\n\n    _classCallCheck(this, MessageForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageForm).call(this));\n    _this.shadowRoot = _this.attachShadow({\n      mode: 'open'\n    });\n\n    _this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n    _this.$form = _this.shadowRoot.querySelector('form');\n    _this.$input = _this.shadowRoot.querySelector('form-input');\n    _this.$message = _this.shadowRoot.querySelector('.result');\n    _this.$button = _this.shadowRoot.querySelector('button');\n    _this.$button.$source = _assertThisInitialized(_this); // black magic to get the original MessageForm from its button\n\n    _this.$form.addEventListener('submit', _this.onSubmit.bind(_assertThisInitialized(_this)));\n\n    _this.$form.addEventListener('keypress', _this.onKeyPress.bind(_assertThisInitialized(_this)));\n\n    _this.$button.onclick = _this.onButtonClick;\n    return _this;\n  }\n\n  _createClass(MessageForm, [{\n    key: \"onSubmit\",\n    value: function onSubmit(event) {\n      event.preventDefault(); // note: Firefox ignores this unless specifically allowed; see _onKeyPress below\n\n      if (this.$input.value === '') {\n        return;\n      }\n\n      var msg = document.createElement('message-item'); // create new message-item\n\n      msg.formulate(new Date(), this.$input.value, null); // instead of passing them to the constructor\n\n      this.$input.reset(); // reset the input form to clear\n\n      msg.store(null); // must be done somewhere; right after creation is the policy for now\n      // note to future: store() has a name argument\n\n      var msgHistory = this.shadowRoot.querySelector('message-history');\n      msgHistory.append(msg);\n    }\n  }, {\n    key: \"onKeyPress\",\n    value: function onKeyPress(event) {\n      if (event.keyCode === 13) {\n        this.$form.dispatchEvent(new Event('submit', {\n          cancelable: true\n        })); // cancelable: true is needed for Firefox\n        // preventDefault() is not allowed to work otherwise\n      }\n    }\n  }, {\n    key: \"onButtonClick\",\n    value: function onButtonClick() {\n      this.$source.$form.dispatchEvent(new Event('submit', {\n        cancelable: true\n      }));\n    } // uses backwards link from the button to the MessageFrom\n\n  }]);\n\n  return MessageForm;\n}(_wrapNativeSuper(HTMLElement));\n\ncustomElements.define('message-form', MessageForm);\n\n//# sourceURL=webpack:///./components/MessageForm.js?");

/***/ }),

/***/ "./components/MessageFormTop.js":
/*!**************************************!*\
  !*** ./components/MessageFormTop.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar template = document.createElement('template');\ntemplate.innerHTML = \"\\n    <style>\\n        .top-area {\\n            font: 12pt bold;\\n            border: 1px solid black;\\n            background-color: #0000dd;\\n            width: 100%;\\n            height: calc(100% - 6px);\\n            margin-top: 2px;\\n            text-align: center;\\n        }\\n        #top-name {\\n            color: white;\\n        }\\n    </style>\\n    <div class=\\\"top-area\\\">\\n        <p id=\\\"top-name\\\"></p>\\n    </div>\\n\";\n\nvar MessageFormTop =\n/*#__PURE__*/\nfunction (_HTMLElement) {\n  _inherits(MessageFormTop, _HTMLElement);\n\n  function MessageFormTop() {\n    var _this;\n\n    _classCallCheck(this, MessageFormTop);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageFormTop).call(this));\n    _this.shadowRoot = _this.attachShadow({\n      mode: 'open'\n    });\n\n    _this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n    _this.$name = _this.shadowRoot.querySelector('#top-name');\n    _this.$name.textContent = 'No_name'; // default for now\n\n    return _this;\n  }\n\n  _createClass(MessageFormTop, [{\n    key: \"setName\",\n    value: function setName(name) {\n      this.$name.textContent = name;\n    }\n  }]);\n\n  return MessageFormTop;\n}(_wrapNativeSuper(HTMLElement));\n\ncustomElements.define('message-form-top', MessageFormTop);\n\n//# sourceURL=webpack:///./components/MessageFormTop.js?");

/***/ }),

/***/ "./components/MessageHistory.js":
/*!**************************************!*\
  !*** ./components/MessageHistory.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar template = document.createElement('template');\ntemplate.innerHTML = \"\\n    <style>\\n        .message-area {\\n            font: 12pt bold;\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: flex-end;\\n        }\\n    </style>\\n    <div class=\\\"message-area\\\"></div>\\n\";\n\nvar MessageHistory =\n/*#__PURE__*/\nfunction (_HTMLElement) {\n  _inherits(MessageHistory, _HTMLElement);\n\n  function MessageHistory() {\n    var _this;\n\n    _classCallCheck(this, MessageHistory);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageHistory).call(this));\n    _this.shadowRoot = _this.attachShadow({\n      mode: 'open'\n    });\n\n    _this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n    _this.$messageArea = _this.shadowRoot.querySelector('.message-area');\n    _this.head = null;\n\n    _this.recreate();\n\n    return _this;\n  }\n\n  _createClass(MessageHistory, [{\n    key: \"recreate\",\n    value: function recreate(chatName) {\n      // clear history, read the localStorage, form the message list, append list\n      this.clear(); // full reset; clearing is also done in writeList(), though\n\n      var name = \"\".concat(chatName || 'No_name');\n      var lsKey = \"messages_\".concat(name);\n      var lsString = localStorage.getItem(lsKey); // the messages stored\n\n      if (lsString === null) {\n        return;\n      }\n\n      var messageList = null;\n      var pos = 0;\n      var len = lsString.length;\n      var sep1 = 0;\n      var msgLength = 0;\n\n      while (pos < len) {\n        sep1 = lsString.indexOf('|', pos);\n        msgLength = Number.parseInt(lsString.slice(pos, sep1), 10);\n        var msgString = lsString.slice(pos, sep1 + msgLength + 1);\n        var msg = document.createElement('message-item');\n        msg.fromString(msgString);\n        messageList = messageList === null ? msg : messageList.add(msg); // can change list head; also must watch out for list being a null\n\n        pos = sep1 + msgLength + 1; // this list is assembled in linear time, assuming older messages at start\n      }\n\n      this.writeList(messageList);\n    }\n  }, {\n    key: \"append\",\n    value: function append(msg) {\n      // append a message to the history\n      // note: no using msg.store() as long as this function is used in recreate()\n      msg.setPrevious(this.head);\n      this.head = msg;\n      this.$messageArea.append(msg);\n      msg.scrollIntoView(false);\n    }\n  }, {\n    key: \"writeList\",\n    value: function writeList(listHead) {\n      // write a full list from the head (i.e., end), overwriting past history\n      this.clear(); // remove everything\n\n      var current = listHead;\n      var msgArea = this.$messageArea;\n\n      while (current.previous !== null) {\n        msgArea.prepend(current);\n        current = current.previous;\n      }\n\n      msgArea.prepend(current);\n      this.head = listHead;\n      listHead.scrollIntoView(false); // set starting position at the newest\n    }\n  }, {\n    key: \"addList\",\n    value: function addList(listHead) {\n      // for merging histories in date order\n      var firstHead = this.head; // head of the list added to (i.e., the one already in the history)\n\n      if (firstHead === null) {\n        // as long as added list is in order; sort it here?\n        // the MessageItem class currently has no methods for assembling lists without date-ordering;\n        // MessageHistory does, however\n        this.writeList(listHead);\n        return;\n      }\n\n      var current = listHead;\n\n      while (current !== null) {\n        var temp = current.previous;\n        firstHead = firstHead.add(current);\n        current = temp; // current.previous may be changed by adding\n      }\n\n      this.writeList(firstHead); // to display messages in order\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var msgArea = this.$messageArea;\n      var messages = msgArea.children;\n      var msgArray = [];\n\n      for (var i = 0; i < messages.length; i += 1) {\n        msgArray[i] = messages[i];\n      }\n\n      for (var _i = 0; _i < msgArray.length; _i += 1) {\n        msgArea.removeChild(msgArray[_i]);\n      } // no direct looping through messages,\n      // as the collection itself is affected by removals\n\n\n      this.head = null;\n    }\n  }]);\n\n  return MessageHistory;\n}(_wrapNativeSuper(HTMLElement));\n\ncustomElements.define('message-history', MessageHistory);\n\n//# sourceURL=webpack:///./components/MessageHistory.js?");

/***/ }),

/***/ "./components/MessageItem.js":
/*!***********************************!*\
  !*** ./components/MessageItem.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar template = document.createElement('template');\ntemplate.innerHTML = \"\\n    <style>\\n        div {\\n            border: 2px solid black;\\n            background-color: #05ffb0;\\n            margin-bottom: 2px;\\n            margin-top: 2px;\\n            width: 85%;\\n            position: relative;\\n            left: calc(15% - 4px);\\n        }\\n\\n        .message-item-text {\\n            font: 12pt bold;\\n        }\\n\\n        .message-item-date {\\n            font: 8pt italic;\\n            text-align: right;\\n        }\\n\\n        .message-item-author {\\n            font: 8pt normal;\\n            text-align: right;\\n        }\\n\\n\\n    </style>\\n    <div>\\n        <p class=\\\"message-item-text\\\"></p>\\n        <p class=\\\"message-item-author\\\"></p>\\n        <p class=\\\"message-item-date\\\"></p>\\n    </div>\\n\";\n\nvar MessageItem =\n/*#__PURE__*/\nfunction (_HTMLElement) {\n  _inherits(MessageItem, _HTMLElement);\n\n  function MessageItem() {\n    var _this;\n\n    _classCallCheck(this, MessageItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MessageItem).call(this));\n    _this.shadowRoot = _this.attachShadow({\n      mode: 'open'\n    });\n\n    _this.shadowRoot.appendChild(template.content.cloneNode(true));\n\n    _this.$text = _this.shadowRoot.querySelector('.message-item-text');\n    _this.$author = _this.shadowRoot.querySelector('.message-item-author');\n    _this.$date = _this.shadowRoot.querySelector('.message-item-date');\n    _this.previous = null;\n    return _this;\n  }\n\n  _createClass(MessageItem, [{\n    key: \"formulate\",\n    value: function formulate(date, text, author) {\n      // make the message item itself; really, what is it with constructor arguments!?\n      this.date = date; // Date object\n\n      this.text = \"\".concat(text); // string\n\n      this.author = \"\".concat(author || 'localhost');\n      this.previous = null; // not set when creating the message; set by external list manipulations\n\n      this.$text.innerText = this.text; // note: see about not storing text and date twice\n\n      this.$date.innerText = \"\".concat(this.date);\n      this.$author.innerText = this.author; // this.store(); // not used this way; see infinite loop with MessageHistory.recreate()\n    }\n  }, {\n    key: \"setPrevious\",\n    value: function setPrevious(head) {\n      this.previous = head;\n    }\n  }, {\n    key: \"store\",\n    value: function store(chatName) {\n      // store the message in localStorage\n      var name = chatName || 'No_name';\n      var lsKey = \"messages_\".concat(name);\n      /*    const { author } = this;\n      const { text } = this;\n      const date = this.date.getTime(); */\n\n      var itemString = this.makeString();\n      var lsString = localStorage.getItem(lsKey);\n      var newString = lsString === null ? \"\".concat(itemString) : \"\".concat(lsString).concat(itemString);\n      localStorage.setItem(lsKey, newString); // newer messages at the end, for linear-time list assembly (see MessageHistory.recreate());\n      // displaying is not done message-by-message anyway\n    }\n  }, {\n    key: \"add\",\n    value: function add(message) {\n      // add to the list, ordered by date\n      var date = message.date;\n      var current = this;\n\n      if (date > current.date) {\n        message.setPrevious(current);\n        return message; // new list head\n      }\n\n      while (current.previous !== null && date < current.previous.date) {\n        current = current.previous; // after this, date is guaranteed to be before current.date,\n        // with either current.previous === null or current.previous.date before date;\n        // either case, message must be inserted between current and current.previous\n      }\n\n      message.setPrevious(current.previous);\n      current.setPrevious(message);\n      return this; // as long as the new message is not the last\n    }\n  }, {\n    key: \"makeString\",\n    value: function makeString() {\n      // make string form of the message for localStorage\n      var author = this.author;\n      var text = this.text;\n      var date = this.date.getTime();\n      var subString = \"\".concat(date, \"|\").concat(author.length, \"|\").concat(text.length, \"|\").concat(author, \"|\").concat(text, \"|\"); // so date is stored in milliseconds; \"|\" is a separator for parsing\n\n      return \"\".concat(subString.length, \"|\").concat(subString);\n    }\n  }, {\n    key: \"fromString\",\n    value: function fromString(msgString) {\n      // recreate message from its string form\n      var sep1 = msgString.indexOf('|'); // first separator\n\n      var sep2 = msgString.indexOf('|', sep1 + 1);\n      var sep3 = msgString.indexOf('|', sep2 + 1);\n      var sep4 = msgString.indexOf('|', sep3 + 1); //    const subLength = Number.parseInt(msgString.slice(0, sep1));\n\n      var dateMillis = Number.parseInt(msgString.slice(sep1 + 1, sep2), 10);\n      var authorLength = Number.parseInt(msgString.slice(sep2 + 1, sep3), 10);\n      var textLength = Number.parseInt(msgString.slice(sep3 + 1, sep4), 10);\n      var author = msgString.slice(sep4 + 1, sep4 + authorLength + 1);\n      var text = msgString.slice(sep4 + authorLength + 2, sep4 + authorLength + textLength + 2);\n      this.formulate(new Date(dateMillis), text, author); //    return this;\n    }\n  }]);\n\n  return MessageItem;\n}(_wrapNativeSuper(HTMLElement));\n\ncustomElements.define('message-item', MessageItem);\n\n//# sourceURL=webpack:///./components/MessageItem.js?");

/***/ }),

/***/ "./index.css":
/*!*******************!*\
  !*** ./index.css ***!
  \*******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./index.css?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.css */ \"./index.css\");\n/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_FormInput__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/FormInput */ \"./components/FormInput.js\");\n/* harmony import */ var _components_FormInput__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_components_FormInput__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_MessageForm__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/MessageForm */ \"./components/MessageForm.js\");\n/* harmony import */ var _components_MessageForm__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_components_MessageForm__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _components_MessageItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/MessageItem */ \"./components/MessageItem.js\");\n/* harmony import */ var _components_MessageItem__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_components_MessageItem__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _components_MessageHistory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/MessageHistory */ \"./components/MessageHistory.js\");\n/* harmony import */ var _components_MessageHistory__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_components_MessageHistory__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _components_MessageFormTop__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/MessageFormTop */ \"./components/MessageFormTop.js\");\n/* harmony import */ var _components_MessageFormTop__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_components_MessageFormTop__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

/******/ });